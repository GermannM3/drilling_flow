# Build stage
FROM python:3.11-slim as builder

# Улучшаем безопасность: добавляем HEALTHCHECK
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Добавляем необходимые build-time зависимости
RUN apt-get update && apt-get install -y \
    gcc \
    postgresql-client \
    libpq-dev \
    # Добавляем поддержку геолокации
    gdal-bin \
    libgdal-dev \
    # Добавляем поддержку SSL
    libssl-dev \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /build

# Оптимизируем установку зависимостей
COPY requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /wheels -r requirements.txt

# Финальный образ
FROM python:3.11-slim

# Добавляем метаданные
LABEL maintainer="DrillFlow Team" \
      version="1.0" \
      description="DrillFlow Production Image"

# Устанавливаем production зависимости
RUN apt-get update && apt-get install -y \
    postgresql-client \
    curl \
    supervisor \
    nginx \
    # Добавляем поддержку геолокации
    gdal-bin \
    # Добавляем мониторинг
    prometheus-node-exporter \
    && rm -rf /var/lib/apt/lists/* \
    && useradd -m -u 1000 appuser \
    && mkdir -p /app /app/logs /app/static /app/media /app/uploads /app/backups \
    && chown -R appuser:appuser /app /var/log/nginx /var/lib/nginx

WORKDIR /app

# Устанавливаем зависимости
COPY --from=builder /wheels /wheels
COPY requirements.txt .
RUN pip install --no-cache-dir --no-index --find-links=/wheels -r requirements.txt \
    && rm -rf /wheels \
    && rm -rf /root/.cache/pip/*

# Копируем конфигурации
COPY docker/nginx/nginx.conf /etc/nginx/conf.d/default.conf
COPY docker/supervisor/supervisord.conf /etc/supervisor/conf.d/supervisord.conf
COPY docker/prometheus/prometheus.yml /etc/prometheus/prometheus.yml
COPY . .

# Добавляем проверки конфигурации
RUN python -c "from app.core.config import settings; from app.bot.main import bot; print('Configuration verified')" \
    && nginx -t \
    && supervisord -c /etc/supervisor/conf.d/supervisord.conf -n start

# Настройка прав и безопасности
RUN chown -R appuser:appuser /app \
    && chmod -R 755 /app/static /app/media \
    && chmod 644 /etc/nginx/conf.d/default.conf \
    # Добавляем права на backup директорию
    && chmod 700 /app/backups

# Расширяем настройки окружения
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONOPTIMIZE=2 \
    PYTHONHASHSEED=random \
    PROMETHEUS_MULTIPROC_DIR=/tmp \
    HOST=0.0.0.0 \
    PORT=8080 \
    WORKERS=4 \
    MAX_REQUESTS=10000 \
    BACKLOG_SIZE=2048 \
    # Настройки безопасности
    SSL_ENABLED=true \
    RATE_LIMIT_ENABLED=true \
    # Настройки геолокации
    MAX_RADIUS_KM=100 \
    # Настройки антифрода
    ANTIFRAUD_ENABLED=true \
    IP_API_ENABLED=true \
    # Настройки бота
    BOT_WEBHOOK_URL="https://germannm3-drilling-flow-12c3.twc1.net/webhook" \
    BOT_ADMIN_GROUP_ID="-100xxx" \
    BOT_SUPPORT_GROUP_ID="-100xxx" \
    # Настройки платежных систем
    PAYMENT_SYSTEMS="SBP,YOOMONEY,STRIPE" \
    # Настройки резервного копирования
    BACKUP_ENABLED=true \
    BACKUP_INTERVAL=86400

# Добавляем тома для персистентных данных
VOLUME ["/app/backups", "/app/logs", "/app/media"]

# Открываем порты
EXPOSE 8080 443 9090

# Переключаемся на непривилегированного пользователя
USER appuser

# Запускаем через supervisor с проверкой здоровья
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"] 
from aiogram import Router, types
from aiogram.filters import Command
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from ..core.bot import bot

router = Router()

async def get_start_keyboard() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.button(text="üìù –°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑", callback_data="create_order")
    builder.button(text="üîç –ú–æ–∏ –∑–∞–∫–∞–∑—ã", callback_data="my_orders")
    builder.button(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å", callback_data="profile")
    builder.button(
        text="üåê –í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", 
        url="https://drilling-flow.vercel.app/webapp"
    )
    builder.adjust(2)
    return builder.as_markup()

@router.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=await get_start_keyboard()
    )

@router.callback_query(lambda c: c.data == "create_order")
async def process_create_order(callback_query: types.CallbackQuery):
    await callback_query.answer()
    await callback_query.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∑–∞–∫–∞–∑–∞:")
    # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞

@router.callback_query(lambda c: c.data == "my_orders")
async def process_my_orders(callback_query: types.CallbackQuery):
    await callback_query.answer()
    await callback_query.message.answer("–í–∞—à–∏ –∑–∞–∫–∞–∑—ã:")
    # –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤

@router.callback_query(lambda c: c.data == "profile")
async def process_profile(callback_query: types.CallbackQuery):
    await callback_query.answer()
    await callback_query.message.answer("–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:")
    # –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ñ–∏–ª–µ 
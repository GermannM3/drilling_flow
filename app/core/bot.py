from aiogram import Bot, Dispatcher
from aiogram.types import WebAppInfo, KeyboardButton, ReplyKeyboardMarkup
from ..core.config import get_settings

settings = get_settings()
bot = Bot(token=settings.TELEGRAM_TOKEN)
dp = Dispatcher(bot)

# –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º
webapp_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(
            text="üåê –û—Ç–∫—Ä—ã—Ç—å DrillFlow",
            web_app=WebAppInfo(url="https://drilling-flow.vercel.app")
        )],
        [KeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"), KeyboardButton(text="üìù –ù–æ–≤—ã–π –∑–∞–∫–∞–∑")],
        [KeyboardButton(text="üë• –ü–æ–¥—Ä—è–¥—á–∏–∫–∏"), KeyboardButton(text="‚≠êÔ∏è –†–µ–π—Ç–∏–Ω–≥")]
    ],
    resize_keyboard=True
)

@dp.message_handler(commands=['start'])
async def start_command(message):
    await message.answer(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ DrillFlow! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–ª–∏ –æ—Ç–∫—Ä–æ–π—Ç–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:",
        reply_markup=webapp_keyboard
    )

@dp.message_handler()
async def handle_message(message):
    if message.web_app_data:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        await message.answer(f"–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ: {message.web_app_data.data}")
    else:
        await message.answer(f"–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞: {message.text}") 
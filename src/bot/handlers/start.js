const { getMainMenuKeyboard } = require('../keyboards');
const { getUserProfileText } = require('../utils');

async function handleStart(bot, msg, prisma) {
  const chatId = msg.chat.id;
  const userId = msg.from.id;

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    let user = await prisma.user.findUnique({
      where: { telegramId: BigInt(userId) },
      include: { contractor: true }
    });

    if (user) {
      // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
      const welcomeBack = `–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, ${user.name}! üëã\n\n${await getUserProfileText(user)}`;
      await bot.sendMessage(chatId, welcomeBack, {
        parse_mode: 'HTML',
        reply_markup: await getMainMenuKeyboard(user.role)
      });
    } else {
      // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–æ–≤—ã–π, –Ω–∞—á–∏–Ω–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
      const welcome = `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ DrillFlow! üöÄ\n\n` +
        `–Ø –ø–æ–º–æ–≥—É –≤–∞–º:\n` +
        `üìù –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ –Ω–∞ –±—É—Ä–µ–Ω–∏–µ –∏–ª–∏ –∫–∞–Ω–∞–ª–∏–∑–∞—Ü–∏—é\n` +
        `üë∑ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∫–∞–∫ –ø–æ–¥—Ä—è–¥—á–∏–∫\n` +
        `üìä –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–æ–≤\n\n` +
        `–í—ã–±–µ—Ä–∏—Ç–µ, –∫–∞–∫ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞:`;

      const options = {
        reply_markup: {
          inline_keyboard: [
            [
              { text: "üè† –Ø –∫–ª–∏–µ–Ω—Ç", callback_data: "register_client" },
              { text: "üë∑ –Ø –ø–æ–¥—Ä—è–¥—á–∏–∫", callback_data: "register_contractor" }
            ]
          ]
        }
      };

      await bot.sendMessage(chatId, welcome, options);
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–æ–º–∞–Ω–¥—ã /start:', error);
    throw error;
  }
}

module.exports = { handleStart }; 
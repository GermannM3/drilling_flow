// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–µ–±—Ö—É–∫–∞ Telegram –Ω–∞ Vercel
const https = require('https');

// –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è 
// –î–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ - 7554540052:AAEvde_xL9d85kbJBdxPu8B6Mo4UEMF-qBs
// –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è - 7293247588:AAH5qQkNUmhoTzZ-_MSw0gS4BKlSTAW5qdM
const TOKEN = process.env.TELEGRAM_TOKEN || "7293247588:AAH5qQkNUmhoTzZ-_MSw0gS4BKlSTAW5qdM";

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
async function sendTelegramMessage(chatId, text, options = {}) {
  const data = JSON.stringify({
    chat_id: chatId,
    text: text,
    parse_mode: options.parse_mode || 'HTML',
    reply_markup: options.reply_markup
  });

  const apiUrl = `https://api.telegram.org/bot${TOKEN}/sendMessage`;
  
  return new Promise((resolve, reject) => {
    const req = https.request(
      apiUrl,
      {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Content-Length': data.length
        }
      },
      (res) => {
        let responseData = '';
        
        res.on('data', (chunk) => {
          responseData += chunk;
        });
        
        res.on('end', () => {
          try {
            const parsedData = JSON.parse(responseData);
            resolve(parsedData);
          } catch (e) {
            reject(new Error(`Failed to parse Telegram API response: ${e.message}`));
          }
        });
      }
    );
    
    req.on('error', (error) => {
      reject(error);
    });
    
    req.write(data);
    req.end();
  });
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
function getMainMenuKeyboard() {
  return {
    keyboard: [
      [{ text: "üìã –ü—Ä–æ—Ñ–∏–ª—å" }, { text: "üì¶ –ó–∞–∫–∞–∑—ã" }],
      [{ text: "üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å" }, { text: "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞" }],
      [{ text: "üí∞ –î–æ—Ö–æ–¥" }, { text: "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏" }],
      [{ text: "üîÑ –ü–æ–¥–ø–∏—Å–∫–∞" }, { text: "üí≥ –¢–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂" }],
      [{ text: "‚ùì –ü–æ–º–æ—â—å" }]
    ],
    resize_keyboard: true
  };
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function getUserProfileText(userId) {
  return `<b>üìã –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>

<b>ID:</b> ${userId}
<b>–ò–º—è:</b> –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
<b>–°—Ç–∞—Ç—É—Å:</b> –ê–∫—Ç–∏–≤–µ–Ω
<b>–†–æ–ª—å:</b> –ü–æ–¥—Ä—è–¥—á–∏–∫
<b>–†–µ–π—Ç–∏–Ω–≥:</b> ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê (5.0)
<b>–í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤:</b> 42
<b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è:</b> 15.01.2024

<i>–î–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫</i>`;
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å–ø—Ä–∞–≤–∫–∏
function getHelpText() {
  return `<b>‚ùì –ü–æ–º–æ—â—å –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</b>

<b>DrillFlow Bot</b> - —Å–∏—Å—Ç–µ–º–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±—É—Ä–æ–≤—ã–º–∏ —Ä–∞–±–æ—Ç–∞–º–∏.

<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
‚Ä¢ /start - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞
‚Ä¢ üìã –ü—Ä–æ—Ñ–∏–ª—å - –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å
‚Ä¢ üì¶ –ó–∞–∫–∞–∑—ã - –î–æ—Å—Ç—É–ø–Ω—ã–µ –∏ —Ç–µ–∫—É—â–∏–µ –∑–∞–∫–∞–∑—ã
‚Ä¢ üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å - –ò–∑–º–µ–Ω–∏—Ç—å –≤–∞—à —Å—Ç–∞—Ç—É—Å
‚Ä¢ üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
‚Ä¢ üí∞ –î–æ—Ö–æ–¥ - –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
‚Ä¢ ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è
‚Ä¢ üîÑ –ü–æ–¥–ø–∏—Å–∫–∞ - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–æ–π
‚Ä¢ üí≥ –¢–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂ - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–ª–∞—Ç—ã
‚Ä¢ ‚ùì –ü–æ–º–æ—â—å - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

<b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞:</b>
–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏: @DrillFlow_Support`;
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –∑–∞–∫–∞–∑–æ–≤
function getOrdersText() {
  return `<b>üì¶ –°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤</b>

<b>–ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã:</b>
‚Ä¢ –ó–∞–∫–∞–∑ #1587 - –ë—É—Ä–µ–Ω–∏–µ —Å–∫–≤–∞–∂–∏–Ω—ã, 25–º
  üìç –ú–æ—Å–∫–≤–∞, –õ–µ–Ω–∏–Ω—Å–∫–∏–π –ø—Ä-—Ç
  üí∞ 65,000 ‚ÇΩ
  üïí –î–æ: 25.03.2024

<b>–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã:</b>
‚Ä¢ –ó–∞–∫–∞–∑ #1498 - –ë—É—Ä–µ–Ω–∏–µ –Ω–∞ –ø–µ—Å–æ–∫, 15m
  ‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω 15.03.2024
  ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê –û—Ü–µ–Ω–∫–∞: 5.0

<i>–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞</i>`;
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
function getStatisticsText(userId) {
  return `<b>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>

<b>–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>
‚Ä¢ –í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤: 42
‚Ä¢ –í —Ä–∞–±–æ—Ç–µ: 1
‚Ä¢ –ó–∞–≤–µ—Ä—à–µ–Ω–æ: 41
‚Ä¢ –û—Ç–º–µ–Ω–µ–Ω–æ: 0

<b>–†–µ–π—Ç–∏–Ω–≥:</b> ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê (5.0)
<b>–ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤:</b> 41 (100%)
<b>–û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤:</b> 0 (0%)

<b>–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</b>
‚Ä¢ –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: 2.5 –¥–Ω—è
‚Ä¢ –°–æ–±–ª—é–¥–µ–Ω–∏–µ —Å—Ä–æ–∫–æ–≤: 98%
‚Ä¢ –ö–∞—á–µ—Å—Ç–≤–æ —Ä–∞–±–æ—Ç—ã: –í—ã—Å–æ–∫–æ–µ

<b>–§–∏–Ω–∞–Ω—Å—ã:</b>
‚Ä¢ –û–±—â–∏–π –¥–æ—Ö–æ–¥: 2,738,500 ‚ÇΩ
‚Ä¢ –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: 65,202 ‚ÇΩ
‚Ä¢ –ë–æ–Ω—É—Å—ã: 12,500 ‚ÇΩ

<i>–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã: —Å–µ–≥–æ–¥–Ω—è –≤ 12:45</i>`;
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–¥–ø–∏—Å–∫–µ
function getSubscriptionText() {
  return `<b>üîÑ –ü–æ–¥–ø–∏—Å–∫–∞</b>

<b>–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å:</b> –ê–∫—Ç–∏–≤–Ω–∞ ‚úÖ
<b>–¢–∞—Ä–∏—Ñ:</b> –ü—Ä–µ–º–∏—É–º
<b>–î–∞—Ç–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏:</b> 01.02.2024
<b>–î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ:</b> 01.04.2024 (–æ—Å—Ç–∞–ª–æ—Å—å 15 –¥–Ω–µ–π)

<b>–í–∫–ª—é—á–µ–Ω–æ –≤ —Ç–∞—Ä–∏—Ñ:</b>
‚Ä¢ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤
‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
‚Ä¢ –ü–æ–≤—ã—à–µ–Ω–Ω—ã–π –ª–∏–º–∏—Ç –∑–∞–∫–∞–∑–æ–≤ (–¥–æ 15 –≤ –¥–µ–Ω—å)
‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä
‚Ä¢ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏

<b>–°—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–¥–ª–µ–Ω–∏—è:</b> 2,990 ‚ÇΩ/–º–µ—Å—è—Ü

<i>–î–ª—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–¥–ª–∏—Ç—å"</i>`;
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ—Å—Ç–æ–≤–æ–º –ø–ª–∞—Ç–µ–∂–µ
function getTestPaymentText() {
  return `<b>üí≥ –¢–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂</b>

–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—É –ø–ª–∞—Ç–µ–∂–µ–π –Ω–∞ –ø—Ä–∏–º–µ—Ä–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞.

<b>–°—É–º–º–∞:</b> 100 ‚ÇΩ
<b>–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:</b> –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –æ–ø–ª–∞—Ç—ã
<b>–ú–µ—Ç–æ–¥:</b> –ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞

<i>–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂, —Ä–µ–∞–ª—å–Ω—ã–µ –¥–µ–Ω—å–≥–∏ –Ω–µ –±—É–¥—É—Ç —Å–ø–∏—Å–∞–Ω—ã</i>`;
}

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
function getTestPaymentKeyboard() {
  return {
    inline_keyboard: [
      [{ text: "üí≥ –û–ø–ª–∞—Ç–∏—Ç—å", callback_data: "pay_test_1" }],
      [{ text: "üîô –ù–∞–∑–∞–¥", callback_data: "back_to_main" }]
    ]
  };
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–æ—Ö–æ–¥–µ
function getIncomeText(userId) {
  return `<b>üí∞ –î–æ—Ö–æ–¥</b>

<b>–û–±—â–∏–π –¥–æ—Ö–æ–¥:</b> 2,738,500 ‚ÇΩ

<b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –º–µ—Å—è—Ü–∞–º:</b>
‚Ä¢ –ú–∞—Ä—Ç 2024: 258,500 ‚ÇΩ (4 –∑–∞–∫–∞–∑–∞)
‚Ä¢ –§–µ–≤—Ä–∞–ª—å 2024: 487,000 ‚ÇΩ (7 –∑–∞–∫–∞–∑–æ–≤)
‚Ä¢ –Ø–Ω–≤–∞—Ä—å 2024: 532,000 ‚ÇΩ (8 –∑–∞–∫–∞–∑–æ–≤)
‚Ä¢ –î–µ–∫–∞–±—Ä—å 2023: 665,000 ‚ÇΩ (10 –∑–∞–∫–∞–∑–æ–≤)

<b>–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å:</b> 156,500 ‚ÇΩ
<b>–î–æ—Å—Ç—É–ø–Ω–æ –∫ –≤—ã–≤–æ–¥—É:</b> 156,500 ‚ÇΩ
<b>–í –æ–±—Ä–∞–±–æ—Ç–∫–µ:</b> 0 ‚ÇΩ

<b>–°–ø–æ—Å–æ–±—ã –≤—ã–≤–æ–¥–∞:</b>
‚Ä¢ –ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞
‚Ä¢ –°–ë–ü
‚Ä¢ –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –∫–æ—à–µ–ª—å–∫–∏

<i>–î–ª—è –≤—ã–≤–æ–¥–∞ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–í—ã–≤–µ—Å—Ç–∏"</i>`;
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
function getSettingsText() {
  return `<b>‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏</b>

<b>–ü—Ä–æ—Ñ–∏–ª—å:</b>
‚Ä¢ –ò–º—è: –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: +7 (999) 123-45-67
‚Ä¢ Email: user@example.com
‚Ä¢ –ê–¥—Ä–µ—Å: –ú–æ—Å–∫–≤–∞, —É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, –¥. 123

<b>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:</b>
‚Ä¢ –ù–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã: ‚úÖ
‚Ä¢ –°–æ–æ–±—â–µ–Ω–∏—è: ‚úÖ
‚Ä¢ –û–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: ‚úÖ
‚Ä¢ –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏: ‚úÖ
‚Ä¢ Email-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: ‚ùå

<b>–†–∞–±–æ—á–∞—è –∑–æ–Ω–∞:</b>
‚Ä¢ –†–∞–¥–∏—É—Å: 50 –∫–º
‚Ä¢ –¶–µ–Ω—Ç—Ä: –ú–æ—Å–∫–≤–∞

<b>–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:</b>
‚Ä¢ –î–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è: ‚ùå
‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω–∏–π –≤—Ö–æ–¥: 22.03.2024, 14:30

<i>–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤—ã–±–µ—Ä–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª</i>`;
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
function getStatusUpdateText() {
  return `<b>üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞</b>

–í–∞—à —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: <b>–°–≤–æ–±–æ–¥–µ–Ω</b>

<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã:</b>
‚úÖ <b>–°–≤–æ–±–æ–¥–µ–Ω</b> - –≥–æ—Ç–æ–≤ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∑–∞–∫–∞–∑—ã
‚è≥ <b>–ó–∞–Ω—è—Ç</b> - –≤—ã–ø–æ–ª–Ω—è—é –∑–∞–∫–∞–∑
üîÑ <b>–ü–µ—Ä–µ—Ä—ã–≤</b> - –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
‚ùå <b>–ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω</b> - –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é –∑–∞–∫–∞–∑—ã

<i>–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞—Ç—É—Å, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –≤–∞—à–µ–π —Ç–µ–∫—É—â–µ–π —Å–∏—Ç—É–∞—Ü–∏–∏</i>`;
}

// –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
async function handler(req, res) {
  if (req.method === 'GET') {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ GET-–∑–∞–ø—Ä–æ—Å–∞ (–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–µ–±—Ö—É–∫–∞)
    const response = {
      app: "DrillFlow Bot",
      version: "1.0.0",
      status: "running",
      webhook_url: "https://drilling-flow.vercel.app/api/telegram_webhook_handler",
      telegram_bot: "@Drill_Flow_bot",
      updated_at: new Date().toISOString(),
      version_tag: "v2023-10-21-04",
      handler_file: "telegram_webhook_handler.js"
    };
    
    res.status(200).json(response);
  } else if (req.method === 'POST') {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ POST-–∑–∞–ø—Ä–æ—Å–∞ –æ—Ç Telegram
    try {
      const update = req.body;
      console.log('Received update:', JSON.stringify(update, null, 2));
      
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ callback –∑–∞–ø—Ä–æ—Å–æ–≤ (–∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∏)
      if (update && update.callback_query) {
        const callbackQuery = update.callback_query;
        const data = callbackQuery.data;
        const chatId = callbackQuery.message.chat.id;
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö callback-–¥–∞–Ω–Ω—ã—Ö
        if (data === 'pay_test_1') {
          // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
          await sendTelegramMessage(
            chatId, 
            '<b>‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω</b>\n\n–°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –æ–ø–ª–∞—Ç—ã!'
          );
        } else if (data === 'back_to_main') {
          // –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
          await sendTelegramMessage(
            chatId,
            '<b>üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –ø—É–Ω–∫—Ç –º–µ–Ω—é:',
            { reply_markup: getMainMenuKeyboard() }
          );
        }
        
        // –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å –∫–Ω–æ–ø–∫–∏
        res.status(200).json({
          method: 'answerCallbackQuery',
          callback_query_id: callbackQuery.id
        });
        return;
      }
      
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
      if (update && update.message) {
        const message = update.message;
        const chatId = message.chat.id;
        const text = message.text || '';
        const userId = message.from.id;
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π
        if (text === '/start') {
          // –ö–æ–º–∞–Ω–¥–∞ /start
          const welcomeMessage = `<b>üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ DrillFlow Bot!</b>

–≠—Ç–æ —Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±—É—Ä–æ–≤—ã–º–∏ —Ä–∞–±–æ—Ç–∞–º–∏.

–ß–µ–º —è –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º —Å–µ–≥–æ–¥–Ω—è?`;
          
          await sendTelegramMessage(chatId, welcomeMessage, {
            reply_markup: getMainMenuKeyboard()
          });
        } else {
          // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥—Ä—É–≥–∏—Ö –∫–æ–º–∞–Ω–¥ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
          switch (text) {
            case 'üìã –ü—Ä–æ—Ñ–∏–ª—å':
              const profileText = getUserProfileText(userId);
              await sendTelegramMessage(chatId, profileText, {
                reply_markup: getMainMenuKeyboard()
              });
              break;
              
            case 'üì¶ –ó–∞–∫–∞–∑—ã':
              const ordersText = getOrdersText();
              await sendTelegramMessage(chatId, ordersText, {
                reply_markup: getMainMenuKeyboard()
              });
              break;
              
            case 'üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å':
              const statusText = getStatusUpdateText();
              await sendTelegramMessage(chatId, statusText, {
                reply_markup: getMainMenuKeyboard()
              });
              break;
              
            case 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞':
              const statsText = getStatisticsText(userId);
              await sendTelegramMessage(chatId, statsText, {
                reply_markup: getMainMenuKeyboard()
              });
              break;
              
            case 'üí∞ –î–æ—Ö–æ–¥':
              const incomeText = getIncomeText(userId);
              await sendTelegramMessage(chatId, incomeText, {
                reply_markup: getMainMenuKeyboard()
              });
              break;
              
            case '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏':
              const settingsText = getSettingsText();
              await sendTelegramMessage(chatId, settingsText, {
                reply_markup: getMainMenuKeyboard()
              });
              break;
              
            case 'üîÑ –ü–æ–¥–ø–∏—Å–∫–∞':
              const subscriptionText = getSubscriptionText();
              await sendTelegramMessage(chatId, subscriptionText, {
                reply_markup: getMainMenuKeyboard()
              });
              break;
              
            case 'üí≥ –¢–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂':
              const paymentText = getTestPaymentText();
              await sendTelegramMessage(chatId, paymentText, {
                reply_markup: getTestPaymentKeyboard()
              });
              break;
              
            case '‚ùì –ü–æ–º–æ—â—å':
              const helpText = getHelpText();
              await sendTelegramMessage(chatId, helpText, {
                reply_markup: getMainMenuKeyboard()
              });
              break;
              
            default:
              // –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –∏–ª–∏ –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
              await sendTelegramMessage(
                chatId,
                '–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.',
                { reply_markup: getMainMenuKeyboard() }
              );
          }
        }
      }
      
      res.status(200).json({ ok: true });
    } catch (error) {
      console.error('Error handling webhook:', error);
      res.status(500).json({ 
        error: 'Internal Server Error',
        message: error.message
      });
    }
  } else {
    // –ú–µ—Ç–æ–¥ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è
    res.setHeader('Allow', ['GET', 'POST']);
    res.status(405).json({ error: `Method ${req.method} not allowed` });
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤ —Ñ–æ—Ä–º–∞—Ç–µ CommonJS
module.exports = {
  default: handler
}; 
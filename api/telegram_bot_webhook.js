// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤–µ–±—Ö—É–∫–∞ Telegram –Ω–∞ Vercel
const https = require('https');

// –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è 
// –î–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ - 7554540052:AAEvde_xL9d85kbJBdxPu8B6Mo4UEMF-qBs
// –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è - 7293247588:AAH5qQkNUmhoTzZ-_MSw0gS4BKlSTAW5qdM
const TOKEN = process.env.TELEGRAM_TOKEN || "7293247588:AAH5qQkNUmhoTzZ-_MSw0gS4BKlSTAW5qdM";

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
async function sendTelegramMessage(chatId, text, options = {}) {
  const data = JSON.stringify({
    chat_id: chatId,
    text: text,
    parse_mode: options.parse_mode || 'HTML',
    reply_markup: options.reply_markup
  });

  const apiUrl = `https://api.telegram.org/bot${TOKEN}/sendMessage`;
  
  return new Promise((resolve, reject) => {
    const req = https.request(apiUrl, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Content-Length': data.length
      }
    }, (res) => {
      let responseData = '';
      
      res.on('data', (chunk) => {
        responseData += chunk;
      });
      
      res.on('end', () => {
        try {
          const parsedData = JSON.parse(responseData);
          resolve(parsedData);
        } catch (e) {
          reject(e);
        }
      });
    });
    
    req.on('error', (error) => {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram:', error);
      reject(error);
    });
    
    req.write(data);
    req.end();
  });
}

// –ü–æ–ª—É—á–∏—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
function getMainMenuKeyboard() {
  return {
    keyboard: [
      [{ text: "üìã –ü—Ä–æ—Ñ–∏–ª—å" }, { text: "üì¶ –ó–∞–∫–∞–∑—ã" }],
      [{ text: "üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å" }, { text: "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞" }],
      [{ text: "üí∞ –î–æ—Ö–æ–¥" }, { text: "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏" }],
      [{ text: "üîÑ –ü–æ–¥–ø–∏—Å–∫–∞" }, { text: "üí≥ –¢–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂" }],
      [{ text: "‚ùì –ü–æ–º–æ—â—å" }]
    ],
    resize_keyboard: true
  };
}

// –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∑–∞–≥–ª—É—à–∫–∞)
function getUserProfileText(userId) {
  return `
<b>üë§ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>

üÜî ID: ${userId}
üì± –°—Ç–∞—Ç—É—Å: <b>–ê–∫—Ç–∏–≤–µ–Ω</b>
üìÖ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: ${new Date().toLocaleDateString('ru-RU')}

<b>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>
‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤: 0
üí∞ –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ –≤—Å–µ–≥–æ: 0‚ÇΩ
‚≠ê –†–µ–π—Ç–∏–Ω–≥: –Ω–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω

<i>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏</i>
`;
}

// –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç –ø–æ–º–æ—â–∏
function getHelpText() {
  return `
<b>‚ùì –ü–æ–º–æ—â—å</b>

<b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
üìã <b>–ü—Ä–æ—Ñ–∏–ª—å</b> - –ø—Ä–æ—Å–º–æ—Ç—Ä –≤–∞—à–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è
üì¶ <b>–ó–∞–∫–∞–∑—ã</b> - —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤
üîÑ <b>–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å</b> - –æ–±–Ω–æ–≤–∏—Ç—å —Å–≤–æ–π —Å—Ç–∞—Ç—É—Å
üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b> - –ø—Ä–æ—Å–º–æ—Ç—Ä –≤–∞—à–µ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
üí∞ <b>–î–æ—Ö–æ–¥</b> - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞—Ä–∞–±–æ—Ç–∫–µ
‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</b> - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è

<b>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
üîÑ <b>–ü–æ–¥–ø–∏—Å–∫–∞</b> - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–æ–π
üí≥ <b>–¢–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂</b> - —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –æ–ø–ª–∞—Ç—ã

<i>–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É: @support</i>
`;
}

// –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–∞—Ö
function getOrdersText() {
  return `
<b>üì¶ –í–∞—à–∏ –∑–∞–∫–∞–∑—ã</b>

–í –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è —É –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤.

<i>–ö–∞–∫ —Ç–æ–ª—å–∫–æ –ø–æ—è–≤—è—Ç—Å—è –Ω–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã, –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.</i>
`;
}

// –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
function getStatisticsText(userId) {
  return `
<b>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b>

üÜî –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${userId}
üìÖ –ü–µ—Ä–∏–æ–¥: <b>–ú–∞—Ä—Ç 2025</b>

<b>–ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏:</b>
‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤: 0
‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ –∑–∞–∫–∞–∑–æ–≤: 0
‚è≥ –í –æ–±—Ä–∞–±–æ—Ç–∫–µ: 0
‚≠ê –°—Ä–µ–¥–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥: N/A

<b>–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:</b>
‚ö° –°–∫–æ—Ä–æ—Å—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: N/A
üìà –î–∏–Ω–∞–º–∏–∫–∞ —Ä–æ—Å—Ç–∞: 0%

<i>–ü–æ–¥—Ä–æ–±–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –º–æ–∂–Ω–æ —É–≤–∏–¥–µ—Ç—å –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ</i>
`;
}

// –¢–µ–∫—Å—Ç –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏
function getSubscriptionText() {
  return `
<b>üîÑ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–æ–π</b>

–í–∞—à —Ç–µ–∫—É—â–∏–π —Ç–∞—Ä–∏—Ñ: <b>–ë–∞–∑–æ–≤—ã–π</b>
–°—Ç–∞—Ç—É—Å: <b>–ê–∫—Ç–∏–≤–Ω–∞</b>
–î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ: <b>01.04.2025</b>

<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã:</b>
üíé <b>–ü—Ä–µ–º–∏—É–º</b> - 999‚ÇΩ/–º–µ—Å—è—Ü
  ‚Ä¢ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –≤ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–æ–≤
  ‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  ‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7

üöÄ <b>–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª</b> - 1999‚ÇΩ/–º–µ—Å—è—Ü
  ‚Ä¢ –í—Å–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –ü—Ä–µ–º–∏—É–º
  ‚Ä¢ –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∫–æ–º–∏—Å—Å–∏–∏
  ‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä

<i>–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–∞—Ä–∏—Ñ–∞ –Ω–∞–∂–º–∏—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É</i>
`;
}

// –¢–µ–∫—Å—Ç –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
function getTestPaymentText() {
  return `
<b>üí≥ –¢–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂</b>

–≠—Ç–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã.

<b>–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ:</b> 1‚ÇΩ
<b>–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:</b> –¢–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂

<i>–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –æ–ø–ª–∞—Ç–µ</i>
`;
}

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞
function getTestPaymentKeyboard() {
  return {
    inline_keyboard: [
      [{ text: "üí≥ –û–ø–ª–∞—Ç–∏—Ç—å", callback_data: "pay_test_1" }],
      [{ text: "üîô –ù–∞–∑–∞–¥", callback_data: "back_to_main" }]
    ]
  };
}

// –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ—Ö–æ–¥–µ
function getIncomeText(userId) {
  return `
<b>üí∞ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Ö–æ–¥–µ</b>

üÜî –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${userId}
üìÖ –ü–µ—Ä–∏–æ–¥: <b>–ú–∞—Ä—Ç 2025</b>

<b>–§–∏–Ω–∞–Ω—Å—ã:</b>
üíµ –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: 0‚ÇΩ
üí∏ –ö–æ–º–∏—Å—Å–∏—è —Å–µ—Ä–≤–∏—Å–∞: 0‚ÇΩ
üíº –ß–∏—Å—Ç–∞—è –ø—Ä–∏–±—ã–ª—å: 0‚ÇΩ

<b>–ü–ª–∞—Ç–µ–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>
üè¶ –°–ø–æ—Å–æ–± –≤—ã–≤–æ–¥–∞: –ù–µ —É–∫–∞–∑–∞–Ω
üìä –°—Ç–∞—Ç—É—Å –≤—ã–ø–ª–∞—Ç: –ù–µ –∞–∫—Ç–∏–≤–µ–Ω

<i>–î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–ø–æ—Å–æ–±–∞ –≤—ã–≤–æ–¥–∞ —Å—Ä–µ–¥—Å—Ç–≤ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</i>
`;
}

// –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫
function getSettingsText() {
  return `
<b>‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏</b>

<b>–û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:</b>
üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: <b>–í–∫–ª—é—á–µ–Ω—ã</b>
üó£Ô∏è –Ø–∑—ã–∫: <b>–†—É—Å—Å–∫–∏–π</b>
üåê –†–µ–≥–∏–æ–Ω: <b>–†–æ—Å—Å–∏—è</b>

<b>–ü—Ä–æ—Ñ–∏–ª—å:</b>
üë§ –í–∏–¥–∏–º–æ—Å—Ç—å –ø—Ä–æ—Ñ–∏–ª—è: <b>–û—Ç–∫—Ä—ã—Ç—ã–π</b>
üîë –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å: <b>–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è</b>

<b>–ü–ª–∞—Ç–µ–∂–∏:</b>
üí≥ –°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã: <b>–ù–µ —É–∫–∞–∑–∞–Ω</b>
üí∞ –°–ø–æ—Å–æ–± –≤—ã–≤–æ–¥–∞: <b>–ù–µ —É–∫–∞–∑–∞–Ω</b>

<i>–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ</i>
`;
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
function getStatusUpdateText() {
  return `<b>üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞</b>

–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Ç–µ–∫—É—â–∏—Ö —Ä–∞–±–æ—Ç.

–°—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: 2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥
–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: –í —Ä–∞–±–æ—Ç–µ

–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.`;
}

module.exports = {
  default: async function handler(req, res) {
    if (req.method === 'GET') {
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ GET-–∑–∞–ø—Ä–æ—Å–∞ (–¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–µ–±—Ö—É–∫–∞)
      const response = {
        app: "DrillFlow Bot",
        version: "1.0.0",
        status: "running",
        webhook_url: "https://drilling-flow.vercel.app/api/telegram_bot_webhook",
        telegram_bot: "@Drill_Flow_bot",
        updated_at: new Date().toISOString(),
        version_tag: "v2023-10-21-04",
        handler_file: "telegram_bot_webhook.js"
      };
      
      res.status(200).json(response);
    } else if (req.method === 'POST') {
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ POST-–∑–∞–ø—Ä–æ—Å–∞ –æ—Ç Telegram
      console.log('Received webhook data:', req.body);
      
      try {
        const update = req.body;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –µ—Å—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ —Ç–µ–∫—Å—Ç
        if (update && update.message && update.message.text) {
          const chatId = update.message.chat.id;
          const text = update.message.text;
          const userId = update.message.from.id;
          
          // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã
          switch (text) {
            case 'üìã –ü—Ä–æ—Ñ–∏–ª—å':
              const profileText = getUserProfileText(userId);
              await sendTelegramMessage(chatId, profileText, {
                reply_markup: getMainMenuKeyboard()
              });
              console.log(`–û—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}`);
              break;
              
            case 'üì¶ –ó–∞–∫–∞–∑—ã':
              const ordersText = getOrdersText();
              await sendTelegramMessage(chatId, ordersText, {
                reply_markup: getMainMenuKeyboard()
              });
              console.log(`–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–∞—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}`);
              break;
              
            case 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞':
              const statsText = getStatisticsText(userId);
              await sendTelegramMessage(chatId, statsText, {
                reply_markup: getMainMenuKeyboard()
              });
              console.log(`–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}`);
              break;
              
            case 'üîÑ –ü–æ–¥–ø–∏—Å–∫–∞':
              const subscriptionText = getSubscriptionText();
              await sendTelegramMessage(chatId, subscriptionText, {
                reply_markup: getMainMenuKeyboard()
              });
              console.log(`–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–ø–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}`);
              break;
              
            case 'üí≥ –¢–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂':
              const paymentText = getTestPaymentText();
              await sendTelegramMessage(chatId, paymentText, {
                reply_markup: getTestPaymentKeyboard()
              });
              console.log(`–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ—Å—Ç–æ–≤–æ–º –ø–ª–∞—Ç–µ–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}`);
              break;
              
            case '‚ùì –ü–æ–º–æ—â—å':
              const helpText = getHelpText();
              await sendTelegramMessage(chatId, helpText, {
                reply_markup: getMainMenuKeyboard()
              });
              console.log(`–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–º–æ—â—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}`);
              break;
              
            case 'üí∞ –î–æ—Ö–æ–¥':
              const incomeText = getIncomeText(userId);
              await sendTelegramMessage(chatId, incomeText, {
                reply_markup: getMainMenuKeyboard()
              });
              console.log(`–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Ö–æ–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}`);
              break;
              
            case '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏':
              const settingsText = getSettingsText();
              await sendTelegramMessage(chatId, settingsText, {
                reply_markup: getMainMenuKeyboard()
              });
              console.log(`–û—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}`);
              break;
              
            case 'ÔøΩÔøΩ –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å':
              const statusText = getStatusUpdateText();
              await sendTelegramMessage(chatId, statusText, {
                reply_markup: getMainMenuKeyboard()
              });
              console.log(`–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}`);
              break;
              
            case '/start':
              const welcomeText = `
<b>üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ DrillFlow Bot!</b>

–Ø –ø–æ–º–æ–≥—É –≤–∞–º —É–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞–∫–∞–∑–∞–º–∏ –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Ä–∞–±–æ—Ç—ã.

<i>–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:</i>
              `;
              
              await sendTelegramMessage(chatId, welcomeText, {
                reply_markup: getMainMenuKeyboard()
              });
              console.log(`–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}`);
              break;
              
            default:
              await sendTelegramMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é:', {
                reply_markup: getMainMenuKeyboard()
              });
              console.log(`–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–¥—Å–∫–∞–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}`);
              break;
          }
        } else if (update && update.callback_query) {
          // –û–±—Ä–∞–±–æ—Ç–∫–∞ callback –∑–∞–ø—Ä–æ—Å–æ–≤ (–¥–ª—è inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã)
          const callbackQuery = update.callback_query;
          const chatId = callbackQuery.message.chat.id;
          const userId = callbackQuery.from.id;
          const data = callbackQuery.data;
          
          // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö callback –∑–∞–ø—Ä–æ—Å–æ–≤
          if (data === 'pay_test_1') {
            await sendTelegramMessage(chatId, '<b>‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!</b>\n\n–°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ø–ª–∞—Ç–µ–∂–µ–π.', {
              reply_markup: getMainMenuKeyboard()
            });
            console.log(`–í—ã–ø–æ–ª–Ω–µ–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º ${userId}`);
          } else if (data === 'back_to_main') {
            await sendTelegramMessage(chatId, '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', {
              reply_markup: getMainMenuKeyboard()
            });
            console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –≤–µ—Ä–Ω—É–ª—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é`);
          }
        }
        
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç
        res.status(200).send('OK');
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–µ–±—Ö—É–∫–∞:', error);
        res.status(500).send('Internal Server Error');
      }
    } else {
      // –ú–µ—Ç–æ–¥ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è
      res.status(405).send('Method Not Allowed');
    }
  }
}; 